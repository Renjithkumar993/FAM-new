{"version":3,"file":"static/js/878.4da6488e.chunk.js","mappings":"qOAOA,SAASA,EAAYC,EAAeC,GACT,IAAIA,GAAeC,UAC3BC,SAASC,IACpB,MAAMC,EAAUL,EAAcM,WAAWF,GACzCC,IAAWE,EAAAA,EAAAA,GAAUP,EAAeK,GAChCL,EAAcQ,iBACdR,EAAcQ,gBAAgBL,SAASM,IACnCV,EAAYU,EAAOR,EAAc,GAEzC,GAER,CAeA,SAASS,IAIL,IAAIC,GAAa,EAIjB,MAAMC,EAAc,IAAIC,IAClBC,EAAW,CACbC,UAAUf,IACNY,EAAYI,IAAIhB,GACT,KAAWY,EAAYK,OAAOjB,EAAc,GAEvDkB,KAAAA,CAAMC,EAAYC,IACdC,EAAAA,EAAAA,GAAUV,EAAY,mHACtB,MAAMW,EAAa,GAMnB,OALAV,EAAYT,SAASH,IACjBsB,EAAWC,MAAKC,EAAAA,EAAAA,GAAqBxB,EAAemB,EAAY,CAC5DC,uBACD,IAEAK,QAAQC,IAAIJ,EACvB,EACAK,IAAIR,KACAE,EAAAA,EAAAA,GAAUV,EAAY,iHACfC,EAAYT,SAASH,KAxCxC,SAAmBA,EAAemB,GAC1BS,MAAMC,QAAQV,GACPpB,EAAYC,EAAemB,GAEP,kBAAfA,EACLpB,EAAYC,EAAe,CAACmB,KAGnCZ,EAAAA,EAAAA,GAAUP,EAAemB,EAEjC,CA+BgBW,CAAU9B,EAAemB,EAAW,KAG5CY,IAAAA,GACInB,EAAYT,SAASH,KA5DjC,SAAuBA,GACnBA,EAAcgC,OAAO7B,SAAS8B,GAAUA,EAAMF,QAClD,CA2DgBG,CAAclC,EAAc,GAEpC,EACAmC,MAAKA,KACDxB,GAAa,EACN,KACHA,GAAa,EACbG,EAASiB,MAAM,IAI3B,OAAOjB,CACX,C,uBCvCA,MAAMsB,EALN,WACI,MAAMtB,GAAWuB,EAAAA,EAAAA,GAAY3B,GAE7B,OADA4B,EAAAA,EAAAA,GAA0BxB,EAASqB,MAAO,IACnCrB,CACX,E,iCC/BA,MA2BA,EA3BsByB,KACpB,MAAMzB,EAAWsB,IAEjB,OACEI,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,iBACVC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxBC,aAAcA,IAAMpC,EAASI,MAAM,CAAEiC,MAAO,OAC5CC,WAAYA,IAAMtC,EAASI,MAAM,CAAEiC,MAAO,IAAKE,SAAA,EAE/Cb,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcU,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2DACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8DAELb,EAAAA,EAAAA,MAACC,EAAAA,EAAOc,OAAM,CACZZ,UAAU,qBACVa,WAAY,CAAEC,gBAAiB,UAAWC,MAAO,OAAQP,MAAO,KAChEQ,SAAU,CAAER,MAAO,IAAME,SAAA,EAEzBC,EAAAA,EAAAA,KAACM,EAAAA,IAAU,CAACC,MAAO,CAAEC,YAAa,UAAY,uBAErC,C","sources":["../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","components/JoinComponent.jsx"],"sourcesContent":["import { invariant } from '../../utils/errors.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","// File: JoinComponent.jsx\r\nimport React from 'react';\r\nimport { motion, useAnimation } from 'framer-motion';\r\nimport { FaUserPlus } from 'react-icons/fa';\r\nimport './JoinComponent.css';\r\n\r\nconst JoinComponent = () => {\r\n  const controls = useAnimation();\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"join-container\"\r\n      initial={{ opacity: 0, y: 50 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      onHoverStart={() => controls.start({ scale: 1.05 })}\r\n      onHoverEnd={() => controls.start({ scale: 1 })}\r\n    >\r\n      <div className=\"join-content\">\r\n        <h1>Join the Fredericton Association of Malayalees today!</h1>\r\n        <p>Become a member and be part of our vibrant community.</p>\r\n      </div>\r\n      <motion.button\r\n        className=\"join-signup-button\"\r\n        whileHover={{ backgroundColor: \"#d43f13\", color: \"#fff\", scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n      >\r\n        <FaUserPlus style={{ marginRight: '10px' }} /> Join Community\r\n      </motion.button>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default JoinComponent;\r\n"],"names":["setVariants","visualElement","variantLabels","reverse","forEach","key","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","Set","controls","subscribe","add","delete","start","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","all","set","Array","isArray","setValues","stop","values","value","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","JoinComponent","_jsxs","motion","div","className","initial","opacity","y","animate","transition","duration","onHoverStart","scale","onHoverEnd","children","_jsx","button","whileHover","backgroundColor","color","whileTap","FaUserPlus","style","marginRight"],"sourceRoot":""}