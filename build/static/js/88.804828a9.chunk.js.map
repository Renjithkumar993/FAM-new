{"version":3,"file":"static/js/88.804828a9.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (window.MotionDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (window.MotionDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (window.MotionDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (window.MotionDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (window.MotionDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.8\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n","import { WillChangeMotionValue } from './index.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["acceleratedValues","Set","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","undefined","memo","callback","result","isAnimatable","name","Array","isArray","complex","test","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","hasAttemptedResolve","updateFinishedPromise","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","concat","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","arguments","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","time","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","KeyframeResolver","KeyframeResolver$1","super","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","resolver","cancel","teardown","onStop","motionValue","onResolved","owner","resolveKeyframes","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","AcceleratedAnimation","DOMKeyframesResolver","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","element","valueName","keyframeOptions","animate","fill","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","set","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","window","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","forEach","cancelTimeline","methodName","controls","animateMotionValue","transition","isHandoff","onEnd","valueTransition","getValueTransition","getVelocity","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","HandoffAppearAnimations","appearId","getOptimisedAppearId","shouldReduceMotion","addValueToWillChange","setTarget","animateVariant","variant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","postRender","optimizedAppearDataAttribute","camelToDash","isKeyframesTarget","_delay","acos","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","queue","add","delete","process","clear","createRenderStep","read","preRender","render","processBatch","useManualTiming","performance","keepAlive","immediate","requestAnimationFrame","clearTime","queueMicrotask","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","positionalKeys","originType","findDimensionValueType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","ref","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","parent","useContext","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","setOptions","alwaysMeasureLayout","scheduleRender","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","useIsomorphicLayoutEffect","updateFeatures","animateChanges","useEffect","completeHandoff","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","transformString","transformName","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","addWillChange","memberName","getWillChangeName","addUniqueItem","forEachDefinition","list","resolveVariantFromProps","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","MotionDebug","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","dimensionValueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","progressPercentage","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","setMotionValue","resolveFinalValueInKeyframes","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","isNullish","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","isWillChangeMotionValue"],"sourceRoot":""}