{"version":3,"file":"static/js/977.ffd099eb.chunk.js","mappings":"yQAMA,MA0FA,EA1FoBA,KAClB,MACMC,GADWC,EAAAA,EAAAA,MACUC,SAASC,MAAM,KAAKC,QAAQC,GAAMA,IAO7D,OACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,UAAW,OAAQC,aAAc,QAASC,UACtDC,EAAAA,EAAAA,MAACC,EAAAA,EAAc,CACbC,WAAWP,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAACC,SAAS,UACtC,aAAW,aACXC,GAAI,CACFD,SAAU,SACVE,QAAS,OACTC,WAAY,UACZR,SAAA,EAEFC,EAAAA,EAAAA,MAACQ,EAAAA,EAAI,CACHC,MAAM,UACNC,GAAG,IACHC,UAAWC,EAAAA,GACXP,GAAI,CACFC,QAAS,OACTC,WAAY,SACZH,SAAU,SACVS,eAAgB,OAChBC,QAAS,UACTC,aAAc,MACdC,WAAY,UACZC,WAAY,kBACZ,UAAW,CACTD,WAAY,YAEdjB,SAAA,EAEFJ,EAAAA,EAAAA,KAACuB,EAAAA,EAAQ,CAACb,GAAI,CAAEc,GAAI,IAAOf,SAAS,YAAY,UAGjDf,EAAU+B,KAAI,CAACC,EAAOC,KACrB,MAAMZ,EAAE,IAAAa,OAAOlC,EAAUmC,MAAM,EAAGF,EAAQ,GAAGG,KAAK,MAC5CC,EAASJ,IAAUjC,EAAUsC,OAAS,EACtCC,EAxCYP,IAEjBA,EAAMQ,QAAQ,KAAM,KAAKA,QAAQ,SAAUC,GAASA,EAAKC,gBAsCvCC,CAAiBX,GAEpC,OAAOK,GACL/B,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTxB,MAAM,cAENJ,GAAI,CACFC,QAAS,OACTC,WAAY,SACZH,SAAU,SACVU,QAAS,UACTC,aAAc,MACdC,WAAY,WACZjB,SAED6B,GAVIlB,IAaPf,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CACHC,MAAM,UACNC,GAAIA,EACJC,UAAWC,EAAAA,GAEXP,GAAI,CACFC,QAAS,OACTC,WAAY,SACZH,SAAU,SACVS,eAAgB,OAChBC,QAAS,UACTC,aAAc,MACdC,WAAY,UACZC,WAAY,kBACZ,UAAW,CACTD,WAAY,YAEdjB,SAED6B,GAfIlB,EAiBR,QAGD,C,6GCrFV,MAsCA,EAtCgBwB,KACd,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAoBrC,OAlBAC,EAAAA,EAAAA,YAAU,KACYC,WAClB,IACE,MAAMC,QAAiBC,MAAM,GAADlB,OAAImB,IAAsB,6CAEhDC,SADkBH,EAASI,QACFxB,KAAIyB,IAAK,CACtCC,SAAS,GAADvB,OAAKmB,IAAsB,0BAAAnB,OAAyBsB,GAC5DE,UAAU,GAADxB,OAAKmB,IAAsB,0BAAAnB,OAAyBsB,OAE/DT,EAAUO,EACZ,CAAE,MAAOK,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,GAGFE,EAAa,GACZ,KAGDlD,EAAAA,EAAAA,MAAA,OAAKmD,UAAU,yBAAwBpD,SAAA,EACrCJ,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,OAAMpD,UACnBJ,EAAAA,EAAAA,KAACP,EAAAA,EAAW,CAAC+D,UAAU,YAEzBxD,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,gBAAepD,SAAC,iBAC9BJ,EAAAA,EAAAA,KAACyD,IAAY,CACXC,MAAOlB,EACPmB,gBAAgB,EAChBC,kBAAkB,OAClBC,UAAU,EACVC,UAAU,MAER,C","sources":["components/Breadcrumbs.js","components/pages/Gallery.js"],"sourcesContent":["import React from 'react';\r\nimport { Breadcrumbs as MUIBreadcrumbs, Link, Typography } from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\r\n\r\nconst Breadcrumbs = () => {\r\n  const location = useLocation();\r\n  const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n  const formatBreadcrumb = (value) => {\r\n    // Replace hyphens with spaces and capitalize each word\r\n    return value.replace(/-/g, ' ').replace(/\\b\\w/g, (char) => char.toUpperCase());\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '60px', marginBottom: '20px' }}>\r\n      <MUIBreadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n        sx={{\r\n          fontSize: '0.8rem',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Link\r\n          color=\"inherit\"\r\n          to=\"/\"\r\n          component={RouterLink}\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontSize: '0.8rem',\r\n            textDecoration: 'none',\r\n            padding: '6px 8px',\r\n            borderRadius: '4px',\r\n            background: '#f0f0f0',\r\n            transition: 'background 0.3s',\r\n            '&:hover': {\r\n              background: '#e0e0e0',\r\n            }\r\n          }}\r\n        >\r\n          <HomeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n          Home\r\n        </Link>\r\n        {pathnames.map((value, index) => {\r\n          const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n          const isLast = index === pathnames.length - 1;\r\n          const breadcrumb = formatBreadcrumb(value);\r\n\r\n          return isLast ? (\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              key={to}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                fontSize: '0.8rem',\r\n                padding: '6px 8px',\r\n                borderRadius: '4px',\r\n                background: '#f0f0f0'\r\n              }}\r\n            >\r\n              {breadcrumb}\r\n            </Typography>\r\n          ) : (\r\n            <Link\r\n              color=\"inherit\"\r\n              to={to}\r\n              component={RouterLink}\r\n              key={to}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                fontSize: '0.8rem',\r\n                textDecoration: 'none',\r\n                padding: '6px 8px',\r\n                borderRadius: '4px',\r\n                background: '#f0f0f0',\r\n                transition: 'background 0.3s',\r\n                '&:hover': {\r\n                  background: '#e0e0e0',\r\n                }\r\n              }}\r\n            >\r\n              {breadcrumb}\r\n            </Link>\r\n          );\r\n        })}\r\n      </MUIBreadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","// src/components/Gallery.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport \"./Gallery.css\"\r\n\r\nconst Gallery = () => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(`${process.env.PUBLIC_URL}/images/galleryimages/galleryimages.json`);\r\n        const imageList = await response.json();\r\n        const imageObjects = imageList.map(image => ({\r\n          original: `${process.env.PUBLIC_URL}/images/galleryimages/${image}`,\r\n          thumbnail: `${process.env.PUBLIC_URL}/images/galleryimages/${image}`\r\n        }));\r\n        setImages(imageObjects);\r\n      } catch (error) {\r\n        console.error('Error fetching images', error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container Gallery-page'>\r\n      <div className='mt-5'>\r\n        <Breadcrumbs className='mt-5' />\r\n      </div>\r\n      <h1 className='event-heading'>Our Gallery</h1>\r\n      <ImageGallery\r\n        items={images}\r\n        showThumbnails={true}\r\n        thumbnailPosition='left'\r\n        infinite={true}\r\n        autoPlay={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"names":["Breadcrumbs","pathnames","useLocation","pathname","split","filter","x","_jsx","style","marginTop","marginBottom","children","_jsxs","MUIBreadcrumbs","separator","NavigateNextIcon","fontSize","sx","display","alignItems","Link","color","to","component","RouterLink","textDecoration","padding","borderRadius","background","transition","HomeIcon","mr","map","value","index","concat","slice","join","isLast","length","breadcrumb","replace","char","toUpperCase","formatBreadcrumb","Typography","Gallery","images","setImages","useState","useEffect","async","response","fetch","process","imageObjects","json","image","original","thumbnail","error","console","fetchImages","className","ImageGallery","items","showThumbnails","thumbnailPosition","infinite","autoPlay"],"sourceRoot":""}